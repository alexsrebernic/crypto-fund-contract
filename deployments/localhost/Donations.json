{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UserAlreadyCreateDonee",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "donation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_donee_contract",
          "type": "address"
        }
      ],
      "name": "newDonee",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "donees",
      "outputs": [
        {
          "internalType": "address",
          "name": "user_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "contract_address",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "emitDonation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDonees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user_address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contract_address",
              "type": "address"
            }
          ],
          "internalType": "struct Donations.userAddressAndContractdAdress[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "killContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_doneeContract",
          "type": "address"
        }
      ],
      "name": "pushDonee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToDonee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa598e8a5f6046794b795de22bf404374c533f3bb62ea2be2590422e9c3ec5f22",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "646448",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x1a77ad521ae1306fe4d02998303d76eaf5b16bb90d6b90a7defb620684bd67a0",
    "transactionHash": "0xa598e8a5f6046794b795de22bf404374c533f3bb62ea2be2590422e9c3ec5f22",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "646448",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6a869184a3238a2b86d26e62b0583a4f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyCreateDonee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_donee_contract\",\"type\":\"address\"}],\"name\":\"newDonee\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"donees\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emitDonation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDonees\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_address\",\"type\":\"address\"}],\"internalType\":\"struct Donations.userAddressAndContractdAdress[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"killContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_doneeContract\",\"type\":\"address\"}],\"name\":\"pushDonee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userToDonee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donations.sol\":\"Donations\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Donations.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\nimport \\\"./Donee.sol\\\";\\nerror UserAlreadyCreateDonee();\\ncontract Donations {\\n    address payable public owner;\\n    userAddressAndContractdAdress[] public donees;\\n    struct userAddressAndContractdAdress {\\n        address user_address;\\n        address contract_address;\\n    }\\n    mapping(address => address) public userToDonee;\\n    event newDonee (address _donee_contract);\\n    event donation (address  _from, address _to,  uint amount);\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    constructor() {\\n        owner = payable(msg.sender);\\n    }\\n    function emitDonation(address  _from, address _to,  uint _amount) external {\\n        emit donation(_from, _to, _amount);\\n    }\\n    function pushDonee(address _user,address _doneeContract) external {\\n        if(userToDonee[_user] == _doneeContract) revert UserAlreadyCreateDonee();\\n        donees.push(userAddressAndContractdAdress(_user, _doneeContract));\\n        emit newDonee(_doneeContract);\\n    }\\n    function killContract() external onlyOwner {\\n        selfdestruct(owner);\\n    }\\n    function getDonees() public view onlyOwner returns(userAddressAndContractdAdress[] memory) {\\n        return donees;\\n    }\\n}\\n\",\"keccak256\":\"0x212da23a70a075140e79e90231fd740994d9beecfdbc8a3973acdcdb93b2d5aa\",\"license\":\"UNLICENSED\"},\"contracts/Donee.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nerror InsufficientBalance(uint256 required);\\nerror FundMe__NotOwner();\\n\\nimport \\\"./Donations.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\ncontract Donee {\\n    address private immutable i_owner;\\n    uint public constant MINIMUN_USD = 1 * 1e18;\\n    address[] private s_donors;\\n    mapping(address => uint256) private s_addressToAmountDonated;\\n    DonationsInterface private immutable donationsContract;\\n    AggregatorV3Interface private immutable aggregatorV3Contract;\\n    DataDonee public  dataDonee;\\n\\n    struct DataDonee {\\n        address owner;\\n        uint  balance;\\n        string  first_name;\\n        string  last_name;\\n        string  avatar_color;\\n        string details;\\n        string  created_at;\\n        address contract_address;\\n    }\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    constructor(string memory _firstName, string memory _lastName, string memory _avatarColor,string memory _details, string memory _createdAt,address _aggregatorV3Interface, address _donationsInterface){\\n        i_owner = msg.sender;\\n        donationsContract = DonationsInterface( _donationsInterface );\\n        aggregatorV3Contract = AggregatorV3Interface( _aggregatorV3Interface );\\n        donationsContract.pushDonee( msg.sender, address(this) );\\n        dataDonee = DataDonee (\\n            msg.sender,\\n            0,\\n            _firstName,\\n            _lastName,\\n            _avatarColor,\\n            _details,\\n            _createdAt,\\n            address(this)\\n        );\\n    }\\n    function donate() public payable {\\n        if(getConversionRate(msg.value) < MINIMUN_USD){ \\n                revert InsufficientBalance({\\n                required: MINIMUN_USD\\n            });\\n        }\\n        s_addressToAmountDonated[msg.sender] += msg.value;\\n        s_donors.push(msg.sender);\\n        dataDonee.balance += msg.value;\\n        donationsContract.emitDonation( msg.sender, address(this),  msg.value );\\n    }\\n    function withdraw() public onlyOwner {\\n        address[] memory donors = s_donors;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < donors.length;\\n            funderIndex++\\n        ) {\\n            address funder = donors[funderIndex];\\n            s_addressToAmountDonated[funder] = 0;\\n        }\\n        s_donors = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n    function getPrice() internal view returns(uint256) {\\n        (, int256 price,,,) = aggregatorV3Contract.latestRoundData();\\n        return uint(price * 1e10);\\n    }\\n    function getConversionRate(uint256 ethAmount) public view returns (uint256){\\n        uint256 ethPrice = getPrice();\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n    function getAddressAmountDonated( address _donor ) internal view returns (uint256) {\\n        return s_addressToAmountDonated[_donor];\\n    }\\n    function getDataDonee() external view returns (DataDonee memory) {\\n        return dataDonee;\\n    }\\n}\\ninterface DonationsInterface {\\n    function pushDonee( address, address ) external ;\\n    function emitDonation( address, address, uint) external;\\n}\",\"keccak256\":\"0x572dab050ff914bee85ccc8586e64a6681790844c0b516463b6643730ff92ccd\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a56806100606000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636e4d2bec1161005b5780636e4d2bec146100c45780638da5cb5b146100f5578063ba23baa014610113578063bcd63e69146101315761007d565b80631c02708d146100825780633b2c5b021461008c5780634476f556146100a8575b600080fd5b61008a610161565b005b6100a660048036038101906100a1919061074f565b61021f565b005b6100c260048036038101906100bd91906107a2565b61025f565b005b6100de60048036038101906100d991906107e2565b61045b565b6040516100ec92919061081e565b60405180910390f35b6100fd6104cf565b60405161010a9190610868565b60405180910390f35b61011b6104f3565b6040516101289190610970565b60405180910390f35b61014b60048036038101906101469190610992565b610683565b60405161015891906109bf565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b7f4e2fd42bf8dc2b90de46e37392efec092ce9a7893fa6f3f508791e13f33cba14838383604051610252939291906109e9565b60405180910390a1505050565b8073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610324576040517f1933ebdb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050507fcd141865b186688b8b61a86ea797fdc4fda0b3214c066091e16f1f1e1d54c0108160405161044f91906109bf565b60405180910390a15050565b6001818154811061046b57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001805480602002602001604051908101604052809291908181526020016000905b8282101561067a57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061059c565b50505050905090565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106e6826106bb565b9050919050565b6106f6816106db565b811461070157600080fd5b50565b600081359050610713816106ed565b92915050565b6000819050919050565b61072c81610719565b811461073757600080fd5b50565b60008135905061074981610723565b92915050565b600080600060608486031215610768576107676106b6565b5b600061077686828701610704565b935050602061078786828701610704565b92505060406107988682870161073a565b9150509250925092565b600080604083850312156107b9576107b86106b6565b5b60006107c785828601610704565b92505060206107d885828601610704565b9150509250929050565b6000602082840312156107f8576107f76106b6565b5b60006108068482850161073a565b91505092915050565b610818816106db565b82525050565b6000604082019050610833600083018561080f565b610840602083018461080f565b9392505050565b6000610852826106bb565b9050919050565b61086281610847565b82525050565b600060208201905061087d6000830184610859565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6108b8816106db565b82525050565b6040820160008201516108d460008501826108af565b5060208201516108e760208501826108af565b50505050565b60006108f983836108be565b60408301905092915050565b6000602082019050919050565b600061091d82610883565b610927818561088e565b93506109328361089f565b8060005b8381101561096357815161094a88826108ed565b975061095583610905565b925050600181019050610936565b5085935050505092915050565b6000602082019050818103600083015261098a8184610912565b905092915050565b6000602082840312156109a8576109a76106b6565b5b60006109b684828501610704565b91505092915050565b60006020820190506109d4600083018461080f565b92915050565b6109e381610719565b82525050565b60006060820190506109fe600083018661080f565b610a0b602083018561080f565b610a1860408301846109da565b94935050505056fea2646970667358221220d6f7ae202e51390dfe52b7b48fa2bfbbf333b75060a95f85e35e3278aa79e31364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80636e4d2bec1161005b5780636e4d2bec146100c45780638da5cb5b146100f5578063ba23baa014610113578063bcd63e69146101315761007d565b80631c02708d146100825780633b2c5b021461008c5780634476f556146100a8575b600080fd5b61008a610161565b005b6100a660048036038101906100a1919061074f565b61021f565b005b6100c260048036038101906100bd91906107a2565b61025f565b005b6100de60048036038101906100d991906107e2565b61045b565b6040516100ec92919061081e565b60405180910390f35b6100fd6104cf565b60405161010a9190610868565b60405180910390f35b61011b6104f3565b6040516101289190610970565b60405180910390f35b61014b60048036038101906101469190610992565b610683565b60405161015891906109bf565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b7f4e2fd42bf8dc2b90de46e37392efec092ce9a7893fa6f3f508791e13f33cba14838383604051610252939291906109e9565b60405180910390a1505050565b8073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610324576040517f1933ebdb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050507fcd141865b186688b8b61a86ea797fdc4fda0b3214c066091e16f1f1e1d54c0108160405161044f91906109bf565b60405180910390a15050565b6001818154811061046b57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001805480602002602001604051908101604052809291908181526020016000905b8282101561067a57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061059c565b50505050905090565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106e6826106bb565b9050919050565b6106f6816106db565b811461070157600080fd5b50565b600081359050610713816106ed565b92915050565b6000819050919050565b61072c81610719565b811461073757600080fd5b50565b60008135905061074981610723565b92915050565b600080600060608486031215610768576107676106b6565b5b600061077686828701610704565b935050602061078786828701610704565b92505060406107988682870161073a565b9150509250925092565b600080604083850312156107b9576107b86106b6565b5b60006107c785828601610704565b92505060206107d885828601610704565b9150509250929050565b6000602082840312156107f8576107f76106b6565b5b60006108068482850161073a565b91505092915050565b610818816106db565b82525050565b6000604082019050610833600083018561080f565b610840602083018461080f565b9392505050565b6000610852826106bb565b9050919050565b61086281610847565b82525050565b600060208201905061087d6000830184610859565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6108b8816106db565b82525050565b6040820160008201516108d460008501826108af565b5060208201516108e760208501826108af565b50505050565b60006108f983836108be565b60408301905092915050565b6000602082019050919050565b600061091d82610883565b610927818561088e565b93506109328361089f565b8060005b8381101561096357815161094a88826108ed565b975061095583610905565b925050600181019050610936565b5085935050505092915050565b6000602082019050818103600083015261098a8184610912565b905092915050565b6000602082840312156109a8576109a76106b6565b5b60006109b684828501610704565b91505092915050565b60006020820190506109d4600083018461080f565b92915050565b6109e381610719565b82525050565b60006060820190506109fe600083018661080f565b610a0b602083018561080f565b610a1860408301846109da565b94935050505056fea2646970667358221220d6f7ae202e51390dfe52b7b48fa2bfbbf333b75060a95f85e35e3278aa79e31364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 52,
        "contract": "contracts/Donations.sol:Donations",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 56,
        "contract": "contracts/Donations.sol:Donations",
        "label": "donees",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(userAddressAndContractdAdress)61_storage)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/Donations.sol:Donations",
        "label": "userToDonee",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(userAddressAndContractdAdress)61_storage)dyn_storage": {
        "base": "t_struct(userAddressAndContractdAdress)61_storage",
        "encoding": "dynamic_array",
        "label": "struct Donations.userAddressAndContractdAdress[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_struct(userAddressAndContractdAdress)61_storage": {
        "encoding": "inplace",
        "label": "struct Donations.userAddressAndContractdAdress",
        "members": [
          {
            "astId": 58,
            "contract": "contracts/Donations.sol:Donations",
            "label": "user_address",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 60,
            "contract": "contracts/Donations.sol:Donations",
            "label": "contract_address",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}