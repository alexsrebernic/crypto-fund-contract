{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_firstName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_lastName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_avatarColor",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_details",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_createdAt",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_aggregatorV3Interface",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_donationsInterface",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "required",
          "type": "uint256"
        }
      ],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dataDonee",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "first_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "last_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "avatar_color",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "details",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "created_at",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "contract_address",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDataDonee",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "first_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "last_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "avatar_color",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "details",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "created_at",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "contract_address",
              "type": "address"
            }
          ],
          "internalType": "struct Donee.DataDonee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x58b07f98c000d58962b9fbfb61ce1f234ed6ac239e29c6978ba67b356110e0cf",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "1586901",
    "logsBloom": "0x00000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000801000000000000000",
    "blockHash": "0xadbbbcb225fc6f36b8882e9e5fa41f629e15e95730cecc2063245f088756c12b",
    "transactionHash": "0x58b07f98c000d58962b9fbfb61ce1f234ed6ac239e29c6978ba67b356110e0cf",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x58b07f98c000d58962b9fbfb61ce1f234ed6ac239e29c6978ba67b356110e0cf",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0xcd141865b186688b8b61a86ea797fdc4fda0b3214c066091e16f1f1e1d54c010"
        ],
        "data": "0x0000000000000000000000009fe46736679d2d9a65f0992f2272de9f3c7fa6e0",
        "logIndex": 0,
        "blockHash": "0xadbbbcb225fc6f36b8882e9e5fa41f629e15e95730cecc2063245f088756c12b"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "1586901",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Alex",
    "Srebernic",
    "#4287f5",
    "Test",
    "07/08/2022",
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
  ],
  "numDeployments": 1,
  "solcInputHash": "6a869184a3238a2b86d26e62b0583a4f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lastName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_avatarColor\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_details\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_createdAt\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_aggregatorV3Interface\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_donationsInterface\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dataDonee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"first_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"last_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar_color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"created_at\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contract_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDataDonee\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"first_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"last_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar_color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"created_at\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contract_address\",\"type\":\"address\"}],\"internalType\":\"struct Donee.DataDonee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donee.sol\":\"Donee\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Donations.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\nimport \\\"./Donee.sol\\\";\\nerror UserAlreadyCreateDonee();\\ncontract Donations {\\n    address payable public owner;\\n    userAddressAndContractdAdress[] public donees;\\n    struct userAddressAndContractdAdress {\\n        address user_address;\\n        address contract_address;\\n    }\\n    mapping(address => address) public userToDonee;\\n    event newDonee (address _donee_contract);\\n    event donation (address  _from, address _to,  uint amount);\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    constructor() {\\n        owner = payable(msg.sender);\\n    }\\n    function emitDonation(address  _from, address _to,  uint _amount) external {\\n        emit donation(_from, _to, _amount);\\n    }\\n    function pushDonee(address _user,address _doneeContract) external {\\n        if(userToDonee[_user] == _doneeContract) revert UserAlreadyCreateDonee();\\n        donees.push(userAddressAndContractdAdress(_user, _doneeContract));\\n        emit newDonee(_doneeContract);\\n    }\\n    function killContract() external onlyOwner {\\n        selfdestruct(owner);\\n    }\\n    function getDonees() public view onlyOwner returns(userAddressAndContractdAdress[] memory) {\\n        return donees;\\n    }\\n}\\n\",\"keccak256\":\"0x212da23a70a075140e79e90231fd740994d9beecfdbc8a3973acdcdb93b2d5aa\",\"license\":\"UNLICENSED\"},\"contracts/Donee.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nerror InsufficientBalance(uint256 required);\\nerror FundMe__NotOwner();\\n\\nimport \\\"./Donations.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\ncontract Donee {\\n    address private immutable i_owner;\\n    uint public constant MINIMUN_USD = 1 * 1e18;\\n    address[] private s_donors;\\n    mapping(address => uint256) private s_addressToAmountDonated;\\n    DonationsInterface private immutable donationsContract;\\n    AggregatorV3Interface private immutable aggregatorV3Contract;\\n    DataDonee public  dataDonee;\\n\\n    struct DataDonee {\\n        address owner;\\n        uint  balance;\\n        string  first_name;\\n        string  last_name;\\n        string  avatar_color;\\n        string details;\\n        string  created_at;\\n        address contract_address;\\n    }\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    constructor(string memory _firstName, string memory _lastName, string memory _avatarColor,string memory _details, string memory _createdAt,address _aggregatorV3Interface, address _donationsInterface){\\n        i_owner = msg.sender;\\n        donationsContract = DonationsInterface( _donationsInterface );\\n        aggregatorV3Contract = AggregatorV3Interface( _aggregatorV3Interface );\\n        donationsContract.pushDonee( msg.sender, address(this) );\\n        dataDonee = DataDonee (\\n            msg.sender,\\n            0,\\n            _firstName,\\n            _lastName,\\n            _avatarColor,\\n            _details,\\n            _createdAt,\\n            address(this)\\n        );\\n    }\\n    function donate() public payable {\\n        if(getConversionRate(msg.value) < MINIMUN_USD){ \\n                revert InsufficientBalance({\\n                required: MINIMUN_USD\\n            });\\n        }\\n        s_addressToAmountDonated[msg.sender] += msg.value;\\n        s_donors.push(msg.sender);\\n        dataDonee.balance += msg.value;\\n        donationsContract.emitDonation( msg.sender, address(this),  msg.value );\\n    }\\n    function withdraw() public onlyOwner {\\n        address[] memory donors = s_donors;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < donors.length;\\n            funderIndex++\\n        ) {\\n            address funder = donors[funderIndex];\\n            s_addressToAmountDonated[funder] = 0;\\n        }\\n        s_donors = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n    function getPrice() internal view returns(uint256) {\\n        (, int256 price,,,) = aggregatorV3Contract.latestRoundData();\\n        return uint(price * 1e10);\\n    }\\n    function getConversionRate(uint256 ethAmount) public view returns (uint256){\\n        uint256 ethPrice = getPrice();\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n    function getAddressAmountDonated( address _donor ) internal view returns (uint256) {\\n        return s_addressToAmountDonated[_donor];\\n    }\\n    function getDataDonee() external view returns (DataDonee memory) {\\n        return dataDonee;\\n    }\\n}\\ninterface DonationsInterface {\\n    function pushDonee( address, address ) external ;\\n    function emitDonation( address, address, uint) external;\\n}\",\"keccak256\":\"0x572dab050ff914bee85ccc8586e64a6681790844c0b516463b6643730ff92ccd\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80632100f4791461005a5780633ccfd60b14610085578063474dffa31461009c5780636e5b6b28146100ce578063957545dd1461010b578063ed88c68e14610136575b600080fd5b34801561006657600080fd5b5061006f610140565b60405161007c9190610e8f565b60405180910390f35b34801561009157600080fd5b5061009a61014c565b005b3480156100a857600080fd5b506100b16103da565b6040516100c5989796959493929190610f84565b60405180910390f35b3480156100da57600080fd5b506100f560048036038101906100f09190611056565b6106f8565b6040516101029190610e8f565b60405180910390f35b34801561011757600080fd5b50610120610732565b60405161012d91906111b7565b60405180910390f35b61013e610add565b005b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561025457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161020a575b5050505050905060005b81518110156102df57600082828151811061027c5761027b6111d9565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102d790611237565b91505061025e565b50600067ffffffffffffffff8111156102fb576102fa611280565b5b6040519080825280602002602001820160405280156103295781602001602082028036833780820191505090505b506000908051906020019061033f929190610d5e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1647604051610386906112e0565b60006040518083038185875af1925050503d80600081146103c3576040519150601f19603f3d011682016040523d82523d6000602084013e6103c8565b606091505b50509050806103d657600080fd5b5050565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461041790611324565b80601f016020809104026020016040519081016040528092919081815260200182805461044390611324565b80156104905780601f1061046557610100808354040283529160200191610490565b820191906000526020600020905b81548152906001019060200180831161047357829003601f168201915b5050505050908060030180546104a590611324565b80601f01602080910402602001604051908101604052809291908181526020018280546104d190611324565b801561051e5780601f106104f35761010080835404028352916020019161051e565b820191906000526020600020905b81548152906001019060200180831161050157829003601f168201915b50505050509080600401805461053390611324565b80601f016020809104026020016040519081016040528092919081815260200182805461055f90611324565b80156105ac5780601f10610581576101008083540402835291602001916105ac565b820191906000526020600020905b81548152906001019060200180831161058f57829003601f168201915b5050505050908060050180546105c190611324565b80601f01602080910402602001604051908101604052809291908181526020018280546105ed90611324565b801561063a5780601f1061060f5761010080835404028352916020019161063a565b820191906000526020600020905b81548152906001019060200180831161061d57829003601f168201915b50505050509080600601805461064f90611324565b80601f016020809104026020016040519081016040528092919081815260200182805461067b90611324565b80156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b5050505050908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b600080610703610ca0565b90506000670de0b6b3a7640000848361071c9190611356565b61072691906113df565b90508092505050919050565b61073a610de8565b6002604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546107b890611324565b80601f01602080910402602001604051908101604052809291908181526020018280546107e490611324565b80156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050815260200160038201805461084a90611324565b80601f016020809104026020016040519081016040528092919081815260200182805461087690611324565b80156108c35780601f10610898576101008083540402835291602001916108c3565b820191906000526020600020905b8154815290600101906020018083116108a657829003601f168201915b505050505081526020016004820180546108dc90611324565b80601f016020809104026020016040519081016040528092919081815260200182805461090890611324565b80156109555780601f1061092a57610100808354040283529160200191610955565b820191906000526020600020905b81548152906001019060200180831161093857829003601f168201915b5050505050815260200160058201805461096e90611324565b80601f016020809104026020016040519081016040528092919081815260200182805461099a90611324565b80156109e75780601f106109bc576101008083540402835291602001916109e7565b820191906000526020600020905b8154815290600101906020018083116109ca57829003601f168201915b50505050508152602001600682018054610a0090611324565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2c90611324565b8015610a795780601f10610a4e57610100808354040283529160200191610a79565b820191906000526020600020905b815481529060010190602001808311610a5c57829003601f168201915b505050505081526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905090565b670de0b6b3a7640000610aef346106f8565b1015610b3a57670de0b6b3a76400006040517f92665351000000000000000000000000000000000000000000000000000000008152600401610b319190610e8f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b899190611410565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460026001016000828254610c089190611410565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633b2c5b023330346040518463ffffffff1660e01b8152600401610c6c93929190611466565b600060405180830381600087803b158015610c8657600080fd5b505af1158015610c9a573d6000803e3d6000fd5b50505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610d0957600080fd5b505afa158015610d1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d41919061152a565b5050509150506402540be40081610d5891906115a5565b91505090565b828054828255906000526020600020908101928215610dd7579160200282015b82811115610dd65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610d7e565b5b509050610de49190610e59565b5090565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115610e72576000816000905550600101610e5a565b5090565b6000819050919050565b610e8981610e76565b82525050565b6000602082019050610ea46000830184610e80565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ed582610eaa565b9050919050565b610ee581610eca565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f25578082015181840152602081019050610f0a565b83811115610f34576000848401525b50505050565b6000601f19601f8301169050919050565b6000610f5682610eeb565b610f608185610ef6565b9350610f70818560208601610f07565b610f7981610f3a565b840191505092915050565b600061010082019050610f9a600083018b610edc565b610fa7602083018a610e80565b8181036040830152610fb98189610f4b565b90508181036060830152610fcd8188610f4b565b90508181036080830152610fe18187610f4b565b905081810360a0830152610ff58186610f4b565b905081810360c08301526110098185610f4b565b905061101860e0830184610edc565b9998505050505050505050565b600080fd5b61103381610e76565b811461103e57600080fd5b50565b6000813590506110508161102a565b92915050565b60006020828403121561106c5761106b611025565b5b600061107a84828501611041565b91505092915050565b61108c81610eca565b82525050565b61109b81610e76565b82525050565b600082825260208201905092915050565b60006110bd82610eeb565b6110c781856110a1565b93506110d7818560208601610f07565b6110e081610f3a565b840191505092915050565b6000610100830160008301516111046000860182611083565b5060208301516111176020860182611092565b506040830151848203604086015261112f82826110b2565b9150506060830151848203606086015261114982826110b2565b9150506080830151848203608086015261116382826110b2565b91505060a083015184820360a086015261117d82826110b2565b91505060c083015184820360c086015261119782826110b2565b91505060e08301516111ac60e0860182611083565b508091505092915050565b600060208201905081810360008301526111d181846110eb565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061124282610e76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561127557611274611208565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006112ca6000836112af565b91506112d5826112ba565b600082019050919050565b60006112eb826112bd565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061133c57607f821691505b602082108114156113505761134f6112f5565b5b50919050565b600061136182610e76565b915061136c83610e76565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113a5576113a4611208565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113ea82610e76565b91506113f583610e76565b925082611405576114046113b0565b5b828204905092915050565b600061141b82610e76565b915061142683610e76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561145b5761145a611208565b5b828201905092915050565b600060608201905061147b6000830186610edc565b6114886020830185610edc565b6114956040830184610e80565b949350505050565b600069ffffffffffffffffffff82169050919050565b6114bc8161149d565b81146114c757600080fd5b50565b6000815190506114d9816114b3565b92915050565b6000819050919050565b6114f2816114df565b81146114fd57600080fd5b50565b60008151905061150f816114e9565b92915050565b6000815190506115248161102a565b92915050565b600080600080600060a0868803121561154657611545611025565b5b6000611554888289016114ca565b955050602061156588828901611500565b945050604061157688828901611515565b935050606061158788828901611515565b9250506080611598888289016114ca565b9150509295509295909350565b60006115b0826114df565b91506115bb836114df565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156115fa576115f9611208565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561163757611636611208565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561167457611673611208565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156116b1576116b0611208565b5b82820290509291505056fea2646970667358221220200f1e8a14673a2ca3e3e8c5bd2acfc58d077595792888c2bae8ffd1218b464c64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 190,
        "contract": "contracts/Donee.sol:Donee",
        "label": "s_donors",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 194,
        "contract": "contracts/Donee.sol:Donee",
        "label": "s_addressToAmountDonated",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 203,
        "contract": "contracts/Donee.sol:Donee",
        "label": "dataDonee",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(DataDonee)220_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DataDonee)220_storage": {
        "encoding": "inplace",
        "label": "struct Donee.DataDonee",
        "members": [
          {
            "astId": 205,
            "contract": "contracts/Donee.sol:Donee",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 207,
            "contract": "contracts/Donee.sol:Donee",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 209,
            "contract": "contracts/Donee.sol:Donee",
            "label": "first_name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 211,
            "contract": "contracts/Donee.sol:Donee",
            "label": "last_name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 213,
            "contract": "contracts/Donee.sol:Donee",
            "label": "avatar_color",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 215,
            "contract": "contracts/Donee.sol:Donee",
            "label": "details",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 217,
            "contract": "contracts/Donee.sol:Donee",
            "label": "created_at",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 219,
            "contract": "contracts/Donee.sol:Donee",
            "label": "contract_address",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}